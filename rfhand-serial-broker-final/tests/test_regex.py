import re
import csv
# 给定的Python语句
python_statement = """
force[0:6, 0:3] = 4.47938 - (4.47938 - 2.49789) * np.exp(-np.power(0.0709 * force[0:6, 0:3], 0.53338))
        # block 0-26
        force[7:12, 0:3] = 4.93103 - (4.93103 - 2.6174) * np.exp(-np.power(0.26818 * force[7:12, 0:3], 0.6242))
        # block 0-36
        force[12:17, 0:3] = 3.94929 - (3.94929 - 2.66822) * np.exp(-np.power(0.20682 * force[12:17, 0:3], 0.74589))
        # block 0-46
        force[18:24, 0:3] = 4.88288 - (4.88288 - 1.60757) * np.exp(-np.power(0.18194 * force[18:24, 0:3], 0.26451))

        # 手掌第5列
        # block 0-15
        force[0:6, 3:6] = 4.58904 - (4.58904 - 2.30149) * np.exp(-np.power(0.15925 * force[0:6, 3:6], 0.5843))
        # block 0-25
        force[7:12, 3:6] = 4.59057 - (4.59057 - 2.84387) * np.exp(-np.power(0.10036 * force[7:12, 3:6], 0.79844))
        # block 0-35
        force[12:17, 3:6] = 3.91487 - (3.91487 - 1.4283) * np.exp(-np.power(0.75369 * force[12:17, 3:6], 0.20016))
        # block 0-45
        force[18:24, 3:6] = 4.8337 - (4.8337 - 2.95177) * np.exp(-np.power(0.20034 * force[18:24, 3:6], 1.31717))
        # 手掌第5列
        # block 0-15
        force[0:6, 3:6] = 3.91487 - (3.91487 - 1.4283) * np.exp(-np.power(0.75369 * force[0:6, 3:6], 0.20016))
        # block 0-25
        force[7:12, 3:6] = 3.91487 - (3.91487 - 1.4283) * np.exp(-np.power(0.75369 * force[7:12, 3:6], 0.20016))
        # block 0-35
        force[12:17, 3:6] = 3.91487 - (3.91487 - 1.4283) * np.exp(-np.power(0.75369 * force[12:17, 3:6], 0.20016))
        # block 0-45
        force[18:24, 3:6] = 3.91487 - (3.91487 - 1.4283) * np.exp(-np.power(0.75369 * force[18:24, 3:6], 0.20016))

        # 手掌第4列
        # block 0-14
        force[0:6, 7:12] = 5.25791 - (5.25791 - 3.00127) * np.exp(-np.power(0.14449 * force[0:6, 7:12], 0.58703))
        # block 0-24
        force[7:12, 7:12] = 4.19232 - (4.19232 - 1.91793) * np.exp(-np.power(0.45422 * force[7:12, 7:12], 0.43525))
        # block 0-34
        force[12:17, 7:12] = 4.56973 - (4.56973 - 2.79259) * np.exp(-np.power(0.03345 * force[12:17, 7:12], 0.56817))
        # block 0-44
        force[18:24, 7:12] = 7.19372 - (7.19372 - 0) * np.exp(-np.power(0.03732 * force[18:24, 7:12], 0.15532))
        # 手掌第4列
        # block 0-14
        force[0:6, 7:12] = 4.19232 - (4.19232 - 1.91793) * np.exp(-np.power(0.45422 * force[0:6, 7:12], 0.43525))
        # block 0-24
        force[7:12, 7:12] = 4.19232 - (4.19232 - 1.91793) * np.exp(-np.power(0.45422 * force[7:12, 7:12], 0.43525))
        # block 0-34
        force[12:17, 7:12] = 4.19232 - (4.19232 - 1.91793) * np.exp(-np.power(0.45422 * force[12:17, 7:12], 0.43525))
        # block 0-44
        force[18:24, 7:12] = 4.19232 - (4.19232 - 1.91793) * np.exp(-np.power(0.45422 * force[18:24, 7:12], 0.43525))

        # 手掌第3列
        # block 0-13
        force[0:6, 13:18] = 4.65352 - (4.65352 - 2.89744) * np.exp(-np.power(0.04293 * force[0:6, 13:18], 0.54702))
        # block 0-23
        force[7:12, 13:18] = 6.49195 - (6.49195 - 2.54964) * np.exp(-np.power(0.00454 * force[7:12, 13:18], 0.44293))
        # block 0-33
        force[12:17, 13:18] = 5.71669 - (5.71669 - 0) * np.exp(-np.power(0.16818 * force[12:17, 13:18], 0.13283))
        # block 0-43
        force[18:24, 13:18] = 3.77978 - (3.77978 - 2.47046) * np.exp(-np.power(0.34152 * force[18:24, 13:18], 0.49367))
        # 手掌第3列
        # block 0-13
        force[0:6, 13:18] = 4.65352 - (4.65352 - 2.89744) * np.exp(-np.power(0.04293 * force[0:6, 13:18], 0.54702))
        # block 0-23
        force[7:12, 13:18] = 4.65352 - (4.65352 - 2.89744) * np.exp(-np.power(0.04293 * force[7:12, 13:18], 0.54702))
        # block 0-33
        force[12:17, 13:18] = 4.65352 - (4.65352 - 2.89744) * np.exp(-np.power(0.04293 * force[12:17, 13:18], 0.54702))
        # block 0-43
        force[18:24, 13:18] = 4.65352 - (4.65352 - 2.89744) * np.exp(-np.power(0.04293 * force[18:24, 13:18], 0.54702))

        # 手掌第2列
        # block 0-12
        force[0:6, 18:21] = 5.43812 - (5.43812 - 1.96841) * np.exp(-np.power(0.13303 * force[0:6, 18:21], 0.26521))
        # block 0-22
        force[7:12, 18:21] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[7:12, 18:21], 0.37992))
        # block 0-32
        force[12:17, 18:21] = 4.42378 - (4.42378 - 3.06482) * np.exp(-np.power(0.21498 * force[12:17, 18:21], 0.55086))
        # block 0-42
        force[18:24, 18:21] = 4.75562 - (4.75562 - 3.29911) * np.exp(-np.power(0.38391 * force[18:24, 18:21], 1.14376))
        # 手掌第2列
        # block 0-12
        force[0:6, 18:21] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[0:6, 18:21], 0.37992))
        # block 0-22
        force[7:12, 18:21] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[7:12, 18:21], 0.37992))
        # block 0-32
        force[12:17, 18:21] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[12:17, 18:21], 0.37992))
        # block 0-42
        force[18:24, 18:21] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[18:24, 18:21], 0.37992))

        # 手掌第1列
        # block 0-11
        force[0:6, 21:24] = 8.10231 - (8.10231 - 0.70403) * np.exp(-np.power(5.1972E-4 * force[0:6, 21:24], 0.11746))
        # block 0-21
        force[7:12, 21:24] = 4.39834 - (4.39834 - 2.65556) * np.exp(-np.power(0.31536 * force[7:12, 21:24], 0.47695))
        # block 0-31
        force[12:17, 21:24] = 4.65687 - (4.65687 - 2.61961) * np.exp(-np.power(0.09542 * force[12:17, 21:24], 0.34059))
        # block 0-41
        force[18:24, 21:24] = 5.20713 - (5.20713 - 0.43871) * np.exp(-np.power(1.84786 * force[18:24, 21:24], 0.2135))
        # 手掌第1列
        # block 0-11
        force[0:6, 21:24] = 4.65687 - (4.65687 - 2.61961) * np.exp(-np.power(0.09542 * force[0:6, 21:24], 0.34059))
        # block 0-21
        force[7:12, 21:24] = 4.65687 - (4.65687 - 2.61961) * np.exp(-np.power(0.09542 * force[7:12, 21:24], 0.34059))
        # block 0-31
        force[12:17, 21:24] = 4.65687 - (4.65687 - 2.61961) * np.exp(-np.power(0.09542 * force[12:17, 21:24], 0.34059))
        # block 0-41
        force[18:24, 21:24] = 4.65687 - (4.65687 - 2.61961) * np.exp(-np.power(0.09542 * force[18:24, 21:24], 0.34059))

        # 大拇指
        # block 1-1
        force[16:24, 24:27] = 3.48893 - (3.48893 - 2.28259) * np.exp(-np.power(0.59433 * force[16:24, 24:27], 0.46984))
        # block 1-2
        force[8:15, 24:27] = 2.86993 - (2.86993 - 2.60652) * np.exp(-np.power(0.04898 * force[8:15, 24:27], 0.95311))
        # 大拇指
        # block 1-1
        force[16:24, 24:27] = 3.48893 - (3.48893 - 2.28259) * np.exp(-np.power(0.59433 * force[16:24, 24:27], 0.46984))
        # block 1-2
        force[8:15, 24:27] = 3.48893 - (3.48893 - 2.28259) * np.exp(-np.power(0.59433 * force[8:15, 24:27], 0.46984))

        # 食指
        # block 2-1
        force[16:24, 28:31] = 9.47424 - (9.47424 - 2.55003) * np.exp(-np.power(0.00333 * force[16:24, 28:31], 1.0748))
        # block 2-2
        force[8:15, 28:31] = 5.38176 - (5.38176 - 2.80027) * np.exp(-np.power(0.02367 * force[8:15, 28:31], 0.37992))
        # block 2-3
        force[0:7, 28:31] = 4.85292 - (4.85292 - 2.39846) * np.exp(-np.power(0.14773 * force[0:7, 28:31], 0.62749))
        # 食指
        # block 2-1
        force[16:24, 28:31] = 4.85292 - (4.85292 - 2.39846) * np.exp(-np.power(0.14773 * force[16:24, 28:31], 0.62749))
        # block 2-2
        force[8:15, 28:31] = 4.85292 - (4.85292 - 2.39846) * np.exp(-np.power(0.14773 * force[8:15, 28:31], 0.62749))
        # block 2-3
        force[0:7, 28:31] = 4.85292 - (4.85292 - 2.39846) * np.exp(-np.power(0.14773 * force[0:7, 28:31], 0.62749))

        # 中指
        # block 3-1
        force[16:24, 32:35] = 3.43245 - (3.43245 - 2.5794) * np.exp(-np.power(0.05108 * force[16:24, 32:35], 1.05352))
        # block 3-2
        force[8:15, 32:35] = 5.76876 - (5.76876 - 2.52362) * np.exp(-np.power(0.00104 * force[8:15, 32:35], 0.5767))
        # block 3-3
        force[0:7, 32:35] = 4.89368 - (4.89368 - 3.8251) * np.exp(-np.power(0.09002 * force[0:7, 32:35], 0.81623))
        # 中指
        # block 3-1
        force[16:24, 32:35] = 5.76876 - (5.76876 - 2.52362) * np.exp(-np.power(0.00104 * force[16:24, 32:35], 0.5767))
        # block 3-2
        force[8:15, 32:35] = 5.76876 - (5.76876 - 2.52362) * np.exp(-np.power(0.00104 * force[8:15, 32:35], 0.5767))
        # block 3-3
        force[0:7, 32:35] = 5.76876 - (5.76876 - 2.52362) * np.exp(-np.power(0.00104 * force[0:7, 32:35], 0.5767))

        # 无名指
        # block 4-1
        force[16:24, 36:39] = 4.19012 - (4.19012 - 2.68729) * np.exp(-np.power(0.0532 * force[16:24, 36:39], 0.81358))
        # block 4-2
        force[8:15, 36:39] = 3.61614 - (3.61614 - 2.11091) * np.exp(-np.power(0.03359 * force[8:15, 36:39], 0.18115))
        # block 4-3
        force[0:7, 36:39] = 4.22998 - (4.22998 - 1.87324) * np.exp(-np.power(0.72253 * force[0:7, 36:39], 0.1805))
        # 无名指
        # block 4-1
        force[16:24, 36:39] = 3.61614 - (3.61614 - 2.11091) * np.exp(-np.power(0.03359 * force[16:24, 36:39], 0.18115))
        # block 4-2
        force[8:15, 36:39] = 3.61614 - (3.61614 - 2.11091) * np.exp(-np.power(0.03359 * force[8:15, 36:39], 0.18115))
        # block 4-3
        force[0:7, 36:39] = 3.61614 - (3.61614 - 2.11091) * np.exp(-np.power(0.03359 * force[0:7, 36:39], 0.18115))

        # 小拇指
        # block 5-1
        force[16:24, 40:43] = 5.00561 - (5.00561 - 2.59381) * np.exp(-np.power(0.06981 * force[16:24, 40:43], 0.7515))
        # block 5-2
        force[8:15, 40:43] = 10.22507 - (10.22507 - 2.6091) * np.exp(-np.power(0.000204024 * force[8:15, 40:43], 0.44191))
        # block 5-3
        force[0:7, 40:43] = 4.10004 - (4.10004 - 2.54662) * np.exp(-np.power(0.24391 * force[0:7, 40:43], 0.56465))
        # 小拇指
        # block 5-1
        force[16:24, 40:43] = 10.22507 - (10.22507 - 2.6091) * np.exp(-np.power(0.000204024 * force[16:24, 40:43], 0.44191))
        # block 5-2
        force[8:15, 40:43] = 10.22507 - (10.22507 - 2.6091) * np.exp(-np.power(0.000204024 * force[8:15, 40:43], 0.44191))
        # block 5-3
        force[0:7, 40:43] = 10.22507 - (10.22507 - 2.6091) * np.exp(-np.power(0.000204024 * force[0:7, 40:43], 0.44191))
"""

# 正则表达式模式
pattern = r"force\[(\d+):(\d+),\s+(\d+):(\d+)\]\s*=\s*(\d+\.\d+)\s*-\s*\((\d+\.\d+)\s*-\s*(\d+\.\d+)\)\s*\*\s*np\.exp\(-np\.power\((\d+\.\d+)\s*\*\s*force\[(\d+):(\d+),\s+(\d+):(\d+)\],\s*(\d+\.\d+)\)\)"

res = []
for line in python_statement.split("\n"):
    # 提取参数
    result = re.search(pattern, line)

    # 检查是否匹配成功
    if result:
        # 提取参数
        start_x = result.group(1)
        end_x = result.group(2)
        start_y = result.group(3)
        end_y = result.group(4)
        A = result.group(5)
        b = result.group(7)
        k = result.group(8)
        d = result.group(13)

        # 打印参数
        print(f"start_x: {start_x}")
        print(f"end_x: {end_x}")
        print(f"start_y: {start_y}")
        print(f"end_y: {end_y}")
        print(f"A: {A}")
        print(f"b: {b}")
        print(f"k: {k}")
        print(f"d: {d}")
        res.append({
            "start_x": start_x,
            "end_x": end_x,
            "start_y": start_y,
            "end_y": end_y,
            "A": A,
            "b": b,
            "k": k,
            "d": d
        })
    else:
        print("未找到匹配的参数")

with open("output.csv", "w", newline="") as csvfile:
    fieldnames = ["start_x", "end_x", "start_y", "end_y", "A", "b", "k", "d"]
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    for row in res:
        writer.writerow(row)